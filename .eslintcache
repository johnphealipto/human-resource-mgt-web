[{"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\index.js":"1","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\store.js":"2","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\App.js":"3","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\reportWebVitals.js":"4","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\LoginScreen.js":"5","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\DashboardScreen.js":"6","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\PasswordScreen.js":"7","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\StaffListScreen.js":"8","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\StaffCreateScreen.js":"9","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\StaffEditScreen.js":"10","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\HomeScreen.js":"11","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\RoleEditScreen.js":"12","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\ProfileScreen.js":"13","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\NextOfKinScreen.js":"14","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\EducationScreen.js":"15","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\HrHomeScreen.js":"16","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\AdminProfileScreen.js":"17","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\AdminNextOfKinScreen.js":"18","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\AdminEducationScreen.js":"19","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\MyLeaveApplicationScreen.js":"20","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\components\\Header.js":"21","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\reducers\\userReducers.js":"22","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\reducers\\profileReducers.js":"23","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\reducers\\nextOfKinReducer.js":"24","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\reducers\\educationReducers.js":"25","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\components\\Message.js":"26","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\components\\Loader.js":"27","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\components\\FixedNavbar.js":"28","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\components\\Paginate.js":"29","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\components\\SearchBox.js":"30","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\actions\\userActions.js":"31","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\actions\\profileActions.js":"32","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\actions\\nextOfKinActions.js":"33","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\actions\\educationActions.js":"34","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\constants\\userConstants.js":"35","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\constants\\profileConstants.js":"36","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\constants\\nextOfKinConstants.js":"37","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\constants\\educationConstants.js":"38","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\shared\\baseUrl.js":"39"},{"size":614,"mtime":1613383456557,"results":"40","hashOfConfig":"41"},{"size":2473,"mtime":1613383456621,"results":"42","hashOfConfig":"41"},{"size":2557,"mtime":1613388148916,"results":"43","hashOfConfig":"41"},{"size":375,"mtime":1613383456565,"results":"44","hashOfConfig":"41"},{"size":3463,"mtime":1613391578432,"results":"45","hashOfConfig":"41"},{"size":7468,"mtime":1613383456599,"results":"46","hashOfConfig":"41"},{"size":6688,"mtime":1613390337781,"results":"47","hashOfConfig":"41"},{"size":5292,"mtime":1613386292083,"results":"48","hashOfConfig":"41"},{"size":9631,"mtime":1613391110659,"results":"49","hashOfConfig":"41"},{"size":9582,"mtime":1613387955424,"results":"50","hashOfConfig":"41"},{"size":5274,"mtime":1613383456602,"results":"51","hashOfConfig":"41"},{"size":7566,"mtime":1613390757187,"results":"52","hashOfConfig":"41"},{"size":19653,"mtime":1613383456611,"results":"53","hashOfConfig":"41"},{"size":10602,"mtime":1613383456608,"results":"54","hashOfConfig":"41"},{"size":8566,"mtime":1613383456600,"results":"55","hashOfConfig":"41"},{"size":2752,"mtime":1613385900377,"results":"56","hashOfConfig":"41"},{"size":22290,"mtime":1613387159542,"results":"57","hashOfConfig":"41"},{"size":12032,"mtime":1613387723673,"results":"58","hashOfConfig":"41"},{"size":11489,"mtime":1613387522409,"results":"59","hashOfConfig":"41"},{"size":1051,"mtime":1613383456606,"results":"60","hashOfConfig":"41"},{"size":2277,"mtime":1613383456479,"results":"61","hashOfConfig":"41"},{"size":5352,"mtime":1613383456563,"results":"62","hashOfConfig":"41"},{"size":3186,"mtime":1613383456562,"results":"63","hashOfConfig":"41"},{"size":3050,"mtime":1613383456561,"results":"64","hashOfConfig":"41"},{"size":3286,"mtime":1613383456559,"results":"65","hashOfConfig":"41"},{"size":295,"mtime":1613383456514,"results":"66","hashOfConfig":"41"},{"size":504,"mtime":1613383456512,"results":"67","hashOfConfig":"41"},{"size":2961,"mtime":1613383456475,"results":"68","hashOfConfig":"41"},{"size":765,"mtime":1613383456516,"results":"69","hashOfConfig":"41"},{"size":892,"mtime":1613383456518,"results":"70","hashOfConfig":"41"},{"size":10069,"mtime":1613383456470,"results":"71","hashOfConfig":"41"},{"size":4980,"mtime":1613383456468,"results":"72","hashOfConfig":"41"},{"size":4898,"mtime":1613383456467,"results":"73","hashOfConfig":"41"},{"size":5076,"mtime":1613383456465,"results":"74","hashOfConfig":"41"},{"size":2116,"mtime":1613383456528,"results":"75","hashOfConfig":"41"},{"size":1398,"mtime":1613383456526,"results":"76","hashOfConfig":"41"},{"size":1238,"mtime":1613383456523,"results":"77","hashOfConfig":"41"},{"size":1480,"mtime":1613383456521,"results":"78","hashOfConfig":"41"},{"size":62,"mtime":1613383456620,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"ookmqj",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\index.js",[],["173","174"],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\store.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\App.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\reportWebVitals.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\LoginScreen.js",["175","176"],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\DashboardScreen.js",["177","178"],"import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Button, Form, ListGroup } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport '../styles/ProfileScreen.css';\r\nimport Header from '../components/Header';\r\n\r\nconst DashboardScreen = ({ history }) => {\r\n    const [firstname, setFirstname] = useState('')\r\n    const [middlename, setMiddlename] = useState('')\r\n    const [lastname, setLastname] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n   \r\n    const [employeeCode, setEmployeeCode] = useState('')\r\n   \r\n    \r\n    const [department, setDepartment] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo) {\r\n            history.push('/')\r\n        } else {\r\n           if(success) {\r\n               dispatch({\r\n                   type: USER_UPDATE_PROFILE_RESET\r\n               })\r\n               history.push('/')\r\n           } else {\r\n            if(!user.firstname) {\r\n                dispatch(getUserDetails('me'))\r\n            } else {\r\n                setFirstname(user.firstname)\r\n                setLastname(user.lastname)\r\n                setMiddlename(user.middlename)\r\n             \r\n               \r\n                setDepartment(user.department)\r\n               \r\n                setEmployeeCode(user.employeeCode)\r\n\r\n            }\r\n        }\r\n        }\r\n        \r\n    }, [dispatch, history, user, success, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n        dispatch(updateUserProfile({\r\n            _id: user._id,\r\n            firstname,\r\n            lastname,\r\n            password,\r\n            middlename,\r\n           \r\n          \r\n        }))\r\n         }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n            <Col md={3}>\r\n                <FixedNavbar />\r\n            </Col>\r\n            <Col md={8}>\r\n                <Header />\r\n                <h1>Personal Details</h1>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Row>\r\n                        <Form.Group  as={Col} controlId='firstname'>\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control \r\n                            type='firstname' \r\n                           \r\n                            placeholder='Enter First name'\r\n                            value={firstname}\r\n                            onChange={(e) => setFirstname(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group  as={Col} controlId='middlename'>\r\n                            <Form.Label>Middle Name</Form.Label>\r\n                            <Form.Control \r\n                            type='middlename' \r\n                            \r\n                            placeholder='Enter Middle name'\r\n                            value={middlename}\r\n                            onChange={(e) => setMiddlename(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group  as={Col} controlId='lastname'>\r\n                            <Form.Label>Last Name</Form.Label>\r\n                            <Form.Control \r\n                            type='lastname' \r\n                            \r\n                            placeholder='Enter Last name'\r\n                            value={lastname}\r\n                            onChange={(e) => setLastname(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        \r\n                  \r\n                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group  as={Col} controlId='department'>\r\n                            <Form.Label>Department</Form.Label>\r\n                            <Form.Control \r\n                            type='department' \r\n                           readOnly\r\n                            placeholder='Enter Department'\r\n                            value={department}\r\n                            onChange={(e) => setDepartment(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group  as={Col} controlId='employeeCode'>\r\n                            <Form.Label>Employee Code</Form.Label>\r\n                            <Form.Control \r\n                            type='employeeCode' \r\n                            readOnly\r\n                            placeholder='Enter Employee Code'\r\n                            value={employeeCode}\r\n                            onChange={(e) => setEmployeeCode(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                      \r\n                  \r\n                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId='password'>\r\n                        <Form.Label>New Password</Form.Label>\r\n                        <Form.Control \r\n                        type='password' \r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId='confirrmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control \r\n                        type='password' \r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                   \r\n                    <Button type='submit' variant='primary' className='btn-block'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            \r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashboardScreen\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\PasswordScreen.js",["179","180"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, ListGroup, Toast, Nav } from 'react-bootstrap'\r\nimport { Link, NavLink} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { updateUserPassword } from '../actions/userActions'\r\nimport { USER_UPDATE_PASSWORD_RESET } from '../constants/userConstants';\r\nimport '../styles/FixedNavbar.css';\r\nimport Header from '../components/Header';\r\nimport '../styles/ProfileScreen.css';\r\n\r\n\r\nconst PasswordScreen = ({ history }) => {\r\n    const [currentPassword, setCurrentPassword] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n    const [show, setShow] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userUpdatePassword = useSelector(state => state.userUpdatePassword)\r\n    const { error, success } = userUpdatePassword\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if(success) {\r\n                dispatch({\r\n                    type: USER_UPDATE_PASSWORD_RESET\r\n                })\r\n                history.push('/home')\r\n            }\r\n        }\r\n    }, [dispatch, success, history, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(newPassword !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            //Dispatch\r\n            dispatch(updateUserPassword({\r\n                currentPassword,\r\n                newPassword\r\n            }))\r\n            //setShow(true)\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Row>\r\n        <Col xs={6}>\r\n        <Toast onClose={() => setShow(false)} show={show} delay={3000} autohide>\r\n          <Toast.Header>\r\n            <img\r\n              src=\"holder.js/20x20?text=%20\"\r\n              className=\"rounded mr-2\"\r\n              alt=\"\"\r\n            />\r\n            <strong className=\"mr-auto\">Password Update</strong>\r\n            <small>1 mins ago</small>\r\n          </Toast.Header>\r\n          <Toast.Body>Your Password has been updated!</Toast.Body>\r\n        </Toast>\r\n         </Col>\r\n         </Row>\r\n        <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n        \r\n        <Col md={3}>\r\n        <div className=\"fixednavbar-wrapper\">\r\n      <div className='employee-details'>\r\n        <p>{userInfo.role}</p>\r\n        <p>{userInfo.email}</p>\r\n      </div>\r\n            <Nav className=\"flex-column\">\r\n            <NavLink to='/home' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-home pr-4\"></i>\r\n          Home\r\n        </NavLink>\r\n        <NavLink to='/dashboard' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"far fa-id-card pr-4\"></i>\r\n          Personal details\r\n        </NavLink>\r\n        <NavLink to='/updatepassword' exact className=\"nav-link\" activeClassName='active-here'>\r\n        <i class=\"fas fa-unlock pr-4\"></i>\r\n          Update Password\r\n        </NavLink>\r\n        <NavLink to='/dashboard' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-graduation-cap pr-4\"></i>\r\n          Education\r\n        </NavLink>\r\n        <NavLink to='/myleave' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-sign-out-alt pr-4\"></i>\r\n          My Leave\r\n        </NavLink>\r\n                {\r\n                    (userInfo.role === 'hr') && (\r\n                        <>\r\n                        <div className='admin-section'>\r\n            <p>Admin Section</p>\r\n          </div>\r\n          <NavLink to='/myleave' exact className=\"nav-link\" activeClassName='active-here'>\r\n            <i class=\"fas fa-box-open pr-4\"></i>\r\n            Leave Applications\r\n          </NavLink>\r\n          <NavLink to='/admin/userlist' exact className=\"nav-link\" activeClassName='active-here'>\r\n            <i class=\"fas fa-users pr-4\"></i>\r\n            All Employees\r\n          </NavLink>\r\n          <NavLink to='/admin/register' exact className=\"nav-link\" activeClassName='active-here'>\r\n            <i class=\"fas fa-user-plus pr-4\"></i>\r\n            Register Employee\r\n          </NavLink>\r\n                        </>\r\n                    )\r\n                }\r\n            </Nav>\r\n            </div>\r\n            </Col>\r\n            <Col md={8}>\r\n                <Header />\r\n                <h1 className='page-header'>Update Password</h1>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && <Message variant='success'>Password Updated</Message>}\r\n               \r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='crrentPassword'>\r\n                        <Form.Label>Current Password</Form.Label>\r\n                        <Form.Control \r\n                        type='password' \r\n                        placeholder='Enter Password'\r\n                        value={currentPassword}\r\n                        onChange={(e) => setCurrentPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId='newpassword'>\r\n                        <Form.Label>New Password</Form.Label>\r\n                        <Form.Control \r\n                        type='password' \r\n                        placeholder='Enter New Password'\r\n                        value={newPassword}\r\n                        onChange={(e) => setNewPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='confirrmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control \r\n                        type='password' \r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            \r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PasswordScreen\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\StaffListScreen.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\StaffCreateScreen.js",["181","182"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, ListGroup } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, register } from '../actions/userActions';\r\nimport { USER_REGISTER_RESET } from '../constants/userConstants';\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport '../styles/StaffCreateScreen.css';\r\nimport Header from '../components/Header';\r\n\r\nconst StaffCreateScreen = ({ history }) => {\r\n    const [firstname, setFirstname] = useState('')\r\n    const [middlename, setMiddlename] = useState('')\r\n    const [lastname, setLastname] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [department, setDepartment] = useState('')\r\n    const [employeeCode, setEmployeeCode] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [role, setRole] = useState('')\r\n    \r\n    const [message, setMessage] = useState(null)\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, success:successRegister } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo  && (userInfo.role === 'hr' || userInfo.role === 'hr-manager' || userInfo.role === 'admin')) {\r\n           \r\n            if(successRegister) {\r\n                dispatch({\r\n                    type: USER_REGISTER_RESET\r\n                })\r\n                history.push('/admin/userlist')\r\n            }\r\n        } else {\r\n            history.push('/')\r\n        }\r\n        \r\n    }, [dispatch, history, userInfo, successRegister])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(\r\n                firstname,\r\n                middlename,\r\n                lastname,\r\n                email,\r\n                department,\r\n                employeeCode,\r\n                role,\r\n                password\r\n            ))\r\n            dispatch(listUsers())\r\n            history.push('/admin/userlist')\r\n        }\r\n        \r\n    }\r\n\r\n  return (\r\n    <>\r\n    \t<Row className='ml-4 mr-4 py-4 staffcreatescreen-wrapper'>\r\n      \t<Col md={3}>\r\n          <FixedNavbar />\r\n        </Col>\r\n            <Col md={6}>\r\n                <Header />\r\n                <h1 className='page-header'>Register a New Employee</h1>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {successRegister && <Message variant='success'>Profile Created</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Row>\r\n                        <Form.Group  as={Col} controlId='firstname'>\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control \r\n                            type='firstname' \r\n                           \r\n                            placeholder='Enter First name'\r\n                            value={firstname}\r\n                            onChange={(e) => setFirstname(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group  as={Col} controlId='middlename'>\r\n                            <Form.Label>Middle Name</Form.Label>\r\n                            <Form.Control \r\n                            type='middlename' \r\n                            \r\n                            placeholder='Enter Middle name'\r\n                            value={middlename}\r\n                            onChange={(e) => setMiddlename(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group  as={Col} controlId='lastname'>\r\n                            <Form.Label>Last Name</Form.Label>\r\n                            <Form.Control \r\n                            type='lastname' \r\n                            \r\n                            placeholder='Enter Last name'\r\n                            value={lastname}\r\n                            onChange={(e) => setLastname(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group  as={Col} controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control \r\n                            type='email' \r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                           \r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGridDepartment\">\r\n                            <Form.Label>Department</Form.Label>\r\n                            <Form.Control \r\n                            as=\"select\" \r\n                            size='sm'\r\n                            value={department}\r\n                            onChange={(e) => setDepartment(e.target.value)}>\r\n                                <option value=''>Select...</option>\r\n                                <option value='IT'>IT</option>\r\n                                <option value='PROJECT'>PROJECT</option>\r\n                                <option value='HR'>HR</option>\r\n                                <option value='MIS'>MIS</option>\r\n                                <option value='QUALITY-ASSURANCE'>QUALITY-ASSURANCE</option>\r\n                                <option value='TRAINING'>TRAINING</option>\r\n                                <option value='ADMIN'>ADMIN</option>\r\n                                <option value='OUTCESS'>OUTCESS</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group  as={Col} controlId='employeeCode'>\r\n                            <Form.Label>Employee Code</Form.Label>\r\n                            <Form.Control \r\n                            type='employeeCode' \r\n                            placeholder='Enter Employee Code'\r\n                            value={employeeCode}\r\n                            onChange={(e) => setEmployeeCode(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridRole\">\r\n                            <Form.Label>Role</Form.Label>\r\n                            <Form.Control \r\n                            as=\"select\" \r\n                            size='sm'\r\n                            value={role}\r\n                            onChange={(e) => setRole(e.target.value)}>\r\n                                <option value=''>Select...</option>\r\n                                <option value='hr'>HR</option>\r\n                                <option value='employee'>EMPLOYEE</option>\r\n                                <option value='supervisor'>SUPERVISOR</option>\r\n                                <option value='admin'>ADMIN</option>\r\n                                <option value='hr-manager'>HR-MANAGER</option>\r\n                                <option value='trainer'>TRAINER</option>\r\n                                <option value='team-lead'>TEAM-LEAD</option>\r\n                                <option value='asst-manager'>ASST-MANAGER</option>\r\n                                <option value='IT-Support'>IT-SUPPORT</option>\r\n                                <option value='agent'>AGENT</option>\r\n                                <option value='manager'>MANAGER</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control \r\n                            type='password' \r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId='confirrmPassword'>\r\n                            <Form.Label>Confirm Password</Form.Label>\r\n                            <Form.Control \r\n                            type='password' \r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Button type='submit' variant='primary' className='btn-block'>\r\n                      Register\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            \r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StaffCreateScreen\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\StaffEditScreen.js",["183"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Nav } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { getUserDetailsById, updateUser } from '../actions/userActions'\r\nimport { USER_DETAILS_ID_RESET, USER_UPDATE_RESET } from '../constants/userConstants'\r\nimport '../styles/FixedNavbar.css';\r\nimport Header from '../components/Header';\r\nimport '../styles/ProfileScreen.css';\r\n\r\n\r\nconst StaffEditScreen = ({ history, match }) => {\r\n    const userId = match.params.id\r\n\r\n    const [firstname, setFirstname] = useState('')\r\n    const [middlename, setMiddlename] = useState('')\r\n    const [lastname, setLastname] = useState('')\r\n    const [email, setEmail] = useState('')\r\n   \r\n    \r\n    const [role, setRole] = useState('')    \r\n    const [department, setDepartment] = useState('')    \r\n    const [employeeCode, setEmployeeCode] = useState('')  \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { success:successUpdate } = userUpdate\r\n\r\n    const userDetailsById = useSelector(state => state.userDetailsById)\r\n    const { error, user } = userDetailsById\r\n\r\n    useEffect(() => {\r\n        if (userInfo  && (userInfo.role === 'hr' || userInfo.role === 'hr-manager' || userInfo.role === 'admin')) {\r\n            \r\n           \r\n            if(successUpdate) {\r\n                dispatch({\r\n                    type: USER_UPDATE_RESET\r\n                })\r\n                dispatch({\r\n                    type: USER_DETAILS_ID_RESET\r\n                })\r\n                history.push('/admin/userlist')\r\n            } else {\r\n            if(!user.employee || user.employee._id !== userId) {\r\n                dispatch(getUserDetailsById(userId))\r\n            } else {\r\n                setFirstname(user.employee.firstname)\r\n                setLastname(user.employee.lastname)\r\n                setMiddlename(user.employee.middlename)\r\n                setEmail(user.employee.email)\r\n                setRole(user.employee.role)\r\n                setDepartment(user.employee.department)\r\n                setEmployeeCode(user.employee.employeeCode)\r\n\r\n            }\r\n        }\r\n        } else {\r\n            history.push('/')\r\n        } \r\n        \r\n    }, [history, userInfo, userId, user, successUpdate, dispatch])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({\r\n            _id: userId,\r\n            firstname,\r\n            middlename,\r\n            lastname,\r\n            email,\r\n           role,\r\n           employeeCode,\r\n           department\r\n        }))\r\n        history.push('/admin/userlist')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {user.employee  && (\r\n            <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n            <Col md={3}>\r\n            <div className=\"fixednavbar-wrapper\">\r\n            <div className='employee-details'>\r\n                <p>{userInfo.role}</p>\r\n                <p>{userInfo.email}</p>\r\n            </div>\r\n        <Nav className=\"flex-column\">\r\n        <NavLink to='/admin/userlist' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-home pr-3\"></i>\r\n          All Employees\r\n        </NavLink>\r\n        <NavLink to={`/admin/user/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"far fa-id-card pr-3\"></i>\r\n          Details\r\n        </NavLink>\r\n        <NavLink to={`/admin/profile/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-user-circle pr-3\"></i>\r\n          Profile\r\n        </NavLink>\r\n        <NavLink to={`/admin/education/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-user-friends pr-3\"></i>\r\n          Education\r\n        </NavLink>\r\n        <NavLink to={`/admin/nextofkin/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-graduation-cap pr-3\"></i>\r\n          Employee Next Of Kin\r\n        </NavLink>\r\n        </Nav>\r\n        </div>\r\n            </Col>\r\n           \r\n            <Col md={8}>\r\n                <Header />\r\n                <h1 className='page-header'>Update {user.employee.firstname}'s Record</h1>\r\n               \r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {successUpdate && <Message variant='success'>Profile Created</Message>}\r\n                \r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Row>\r\n                        <Form.Group  as={Col} controlId='firstname'>\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control \r\n                            type='firstname' \r\n                           \r\n                            placeholder='Enter First name'\r\n                            value={firstname}\r\n                            onChange={(e) => setFirstname(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group  as={Col} controlId='middlename'>\r\n                            <Form.Label>Middle Name</Form.Label>\r\n                            <Form.Control \r\n                            type='middlename' \r\n                            \r\n                            placeholder='Enter Middle name'\r\n                            value={middlename}\r\n                            onChange={(e) => setMiddlename(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group  as={Col} controlId='lastname'>\r\n                            <Form.Label>Last Name</Form.Label>\r\n                            <Form.Control \r\n                            type='lastname' \r\n                            \r\n                            placeholder='Enter Last name'\r\n                            value={lastname}\r\n                            onChange={(e) => setLastname(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group  as={Col} controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control \r\n                            type='email' \r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                           \r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGridDepartment\">\r\n                            <Form.Label>Department</Form.Label>\r\n                            <Form.Control \r\n                            as=\"select\" \r\n                            size='sm'\r\n                            value={department}\r\n                            onChange={(e) => setDepartment(e.target.value)}>\r\n                                <option value=''>Select...</option>\r\n                                <option value='IT'>IT</option>\r\n                                <option value='PROJECT'>PROJECT</option>\r\n                                <option value='HR'>HR</option>\r\n                                <option value='OUTCESS'>OUTCESS</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group  as={Col} controlId='employeeCode'>\r\n                            <Form.Label>Employee Code</Form.Label>\r\n                            <Form.Control \r\n                            type='employeeCode' \r\n                            placeholder='Enter Employee Code'\r\n                            value={employeeCode}\r\n                            onChange={(e) => setEmployeeCode(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridRole\">\r\n                            <Form.Label>Role</Form.Label>\r\n                            <Form.Control \r\n                            as=\"select\" \r\n                            size='sm'\r\n                            value={role}\r\n                            onChange={(e) => setRole(e.target.value)}>\r\n                                <option value=''>Select...</option>\r\n                                <option value='hr'>HR</option>\r\n                                <option value='employee'>EMPLOYEE</option>\r\n                                <option value='agent'>AGENT</option>\r\n                                <option value='manager'>MANAGER</option>\r\n                                <option value='admin'>ADMIN</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        \r\n                    </Form.Row>\r\n                    <Button type='submit' variant='primary' className='btn-block'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n                 \r\n        </Row>\r\n        )\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StaffEditScreen\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\HomeScreen.js",["184"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Table, Button, Row, Col, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserDetails } from '../actions/userActions'\r\nimport '../styles/ProfileScreen.css';\r\nimport Header from '../components/Header';\r\nimport FixedNavbar from '../components/FixedNavbar';\r\n\r\nconst HomeScreen = ({ history }) => {\r\n   \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { user } = userDetails\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo) {\r\n            history.push('/')\r\n        } else {\r\n            dispatch(getUserDetails('me'))\r\n        }\r\n    }, [dispatch, history, user, userInfo])\r\n\r\n  return (\r\n    <>   \r\n      <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n        <Col md={3}>\r\n          <FixedNavbar />\r\n        </Col>\r\n        <Col md={8}>\r\n          <Header />\r\n          <h1 className='page-header'>Home</h1>\r\n          <Form key={user._id}>\r\n                <Form.Row>\r\n                  <Form.Group  as={Col}>\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control \r\n                    \ttype=\"text\"\r\n                    \tplaceholder={user.firstname}\r\n                        readOnly\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group  as={Col}>\r\n                    <Form.Label>Middle Name</Form.Label>\r\n                    <Form.Control \r\n                      type=\"text\"\r\n                      placeholder={user.middlename}\r\n                      readOnly\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group  as={Col}>\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control \r\n                    \ttype=\"text\"\r\n                    \tplaceholder={user.lastname}\r\n                        readOnly\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                  <Form.Group  as={Col}>\r\n                    <Form.Label>Employee ID</Form.Label>\r\n                    <Form.Control \r\n                      type=\"text\"\r\n                      placeholder={user.employeeCode}\r\n                    ></Form.Control>\r\n                \t</Form.Group>\r\n                \t<Form.Group  as={Col}>\r\n                    <Form.Label>Department</Form.Label>\r\n                    <Form.Control \r\n                      type=\"text\"\r\n                      placeholder={user.department}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                  <Form.Group  as={Col}>\r\n                    <Form.Label>Role</Form.Label>\r\n                    <Form.Control \r\n                      type=\"text\"\r\n                      placeholder={user.role}\r\n                    ></Form.Control>\r\n                \t</Form.Group>\r\n                \t<Form.Group  as={Col}>\r\n                    <Form.Label>Mail Addresss</Form.Label>\r\n                    <Form.Control \r\n                      type=\"text\"\r\n                      placeholder={user.email}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                {userInfo && (\r\n                <Link to='/dashboard'>\r\n                    <Button type='submit' variant='primary' className='btn-block'>\r\n                        <i className='fas fa-edit'></i> Edit\r\n                    </Button>\r\n                </Link>\r\n                )}\r\n              </Form>\r\n\r\n        {/* <Table striped bordered hover className='table-sm mr-4 ml-3 home-table'>\r\n          <thead>\r\n            <tr>\r\n                    <th>EMPLOYEE ID</th>\r\n                    <th>FIRST NAME</th>\r\n                    <th>MIDDLE NAME</th>\r\n                    <th>LAST NAME</th>\r\n                    <th>EMAIL</th>\r\n                    <th>ROLE</th>\r\n                    <th>DEPARTMENT</th>\r\n                    <th>ACTION</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                \r\n                <tr key={user._id}>\r\n                    <td>{user.employeeCode}</td>\r\n                    <td>{user.firstname}</td>\r\n                    <td>{user.middlename}</td>\r\n                    <td>{user.lastname}</td>\r\n                    <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                    <td>{user.role}</td>\r\n                    <td>{user.department}</td>\r\n                    {userInfo && (\r\n                    <td>\r\n                        <Link to='/dashboard'>\r\n                            <Button variant='light' className='btn-sm'>\r\n                                <i className='fas fa-edit'></i>\r\n                            </Button>\r\n                        </Link>\r\n                        \r\n                    </td>\r\n                    )}\r\n                </tr>\r\n                \r\n            </tbody>\r\n        </Table> */}\r\n        </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen;","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\RoleEditScreen.js",["185","186","187"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, ListGroup, Nav } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetailsById, updateUser } from '../actions/userActions'\r\nimport { USER_DETAILS_ID_RESET, USER_UPDATE_RESET } from '../constants/userConstants';\r\nimport '../styles/FixedNavbar.css';\r\nimport Header from '../components/Header';\r\nimport '../styles/ProfileScreen.css';\r\n\r\n\r\nconst RoleEditScreen = ({ history, match }) => {\r\n    const userId = match.params.id\r\n\r\n    const [role, setRole] = useState('')\r\n    const [employeeCode, setEmployeeCode] = useState('')\r\n    const [isManager, setIsManager] = useState(false)\r\n    const [isActive, setIsActive] = useState(false)\r\n\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { success:successUpdate } = userUpdate\r\n    \r\n\r\n    const userDetailsById = useSelector(state => state.userDetailsById)\r\n    const { loading, error, user } = userDetailsById\r\n    \r\n    useEffect(() => {\r\n        if (userInfo  && (userInfo.role === 'hr' || userInfo.role === 'hr-manager' || userInfo.role === 'admin')) {\r\n            \r\n           \r\n            if(successUpdate) {\r\n                dispatch({\r\n                    type: USER_UPDATE_RESET\r\n                })\r\n                dispatch({\r\n                    type: USER_DETAILS_ID_RESET\r\n                })\r\n                history.push('/admin/userlist')\r\n            } else {\r\n            if(!user.employee || userId !== user.employee._id) {\r\n                dispatch(getUserDetailsById(userId))\r\n            } else {\r\n                setRole(user.employee.role)\r\n                setIsActive(user.employee.isActive)\r\n                setIsManager(user.employee.isManager)\r\n                setEmployeeCode(user.employee.employeeCode)\r\n            }\r\n        }\r\n        } else {\r\n            history.push('/')\r\n        }\r\n        \r\n        \r\n    }, [history, successUpdate, userInfo, userId, user, dispatch])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({\r\n            _id: userId,\r\n            employeeCode,\r\n            role,\r\n            isActive,\r\n            isManager\r\n        }))\r\n        history.push('/admin/userlist')\r\n        //history.push('/admin/userlist')\r\n    }\r\n    return (\r\n        <>\r\n            {user.employee && (\r\n            <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n            <Col md={3}>\r\n            <div className=\"fixednavbar-wrapper\">\r\n      <div className='employee-details'>\r\n        <p>{userInfo.role}</p>\r\n        <p>{userInfo.email}</p>\r\n      </div>\r\n            <Nav className=\"flex-column\">\r\n            <NavLink to='/home' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-home pr-4\"></i>\r\n          Home\r\n        </NavLink>\r\n        <NavLink to='/dashboard' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"far fa-id-card pr-4\"></i>\r\n          Personal details\r\n        </NavLink>\r\n        <NavLink to='/updatepassword' exact className=\"nav-link\" activeClassName='active-here'>\r\n        <i class=\"fas fa-unlock pr-4\"></i>\r\n          Update Password\r\n        </NavLink>\r\n        <NavLink to='/dashboard' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-graduation-cap pr-4\"></i>\r\n          Education\r\n        </NavLink>\r\n        <NavLink to='/myleave' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-sign-out-alt pr-4\"></i>\r\n          My Leave\r\n        </NavLink>\r\n                {\r\n                    (userInfo.role === 'hr') && (\r\n                        <>\r\n                        <div className='admin-section'>\r\n            <p>Admin Section</p>\r\n          </div>\r\n          <NavLink to='/myleave' exact className=\"nav-link\" activeClassName='active-here'>\r\n            <i class=\"fas fa-box-open pr-4\"></i>\r\n            Leave Applications\r\n          </NavLink>\r\n          <NavLink to='/admin/userlist' exact className=\"nav-link\" activeClassName='active-here'>\r\n            <i class=\"fas fa-users pr-4\"></i>\r\n            All Employees\r\n          </NavLink>\r\n          <NavLink to='/admin/register' exact className=\"nav-link\" activeClassName='active-here'>\r\n            <i class=\"fas fa-user-plus pr-4\"></i>\r\n            Register Employee\r\n          </NavLink>\r\n                        </>\r\n                    )\r\n                }\r\n            </Nav>\r\n            </div>\r\n            </Col>\r\n            <Col md={8}>\r\n                <Header />\r\n                <h1 className='page-header'>Update {user.employee.email} Role</h1>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {successUpdate && <Message variant='success'>Profile Created</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='isActive'>\r\n                        <Form.Check\r\n                        type='checkbox' \r\n                        label='Is Active'\r\n                        checked={isActive}\r\n                        onChange={(e) => setIsActive(e.target.checked)}\r\n                        ></Form.Check>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='isManager'>\r\n                        <Form.Check\r\n                        type='checkbox' \r\n                        label='Is Manager'\r\n                        checked={isManager}\r\n                        onChange={(e) => setIsManager(e.target.checked)}\r\n                        ></Form.Check>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGridRole\">\r\n                            <Form.Label>Role</Form.Label>\r\n                            <Form.Control \r\n                            as=\"select\" \r\n                            size='sm'\r\n                            value={role}\r\n                            onChange={(e) => setRole(e.target.value)}>\r\n                                <option value=''>Select...</option>\r\n                                <option value='hr'>HR</option>\r\n                                <option value='employee'>EMPLOYEE</option>\r\n                                <option value='agent'>AGENT</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='employeeCode'>\r\n                            <Form.Label>Employee Code</Form.Label>\r\n                            <Form.Control \r\n                            type='employeeCode' \r\n                            placeholder='Enter Employee Code'\r\n                            value={employeeCode}\r\n                            onChange={(e) => setEmployeeCode(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            </Row>\r\n            )}\r\n            </>\r\n    )\r\n}\r\n\r\nexport default RoleEditScreen\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\ProfileScreen.js",["188","189"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Form } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createProfile, getProfileDetails, updateProfile } from '../actions/profileActions'\r\nimport { PROFILE_CREATE_RESET, PROFILE_DETAILS_RESET, PROFILE_UPDATE_RESET } from '../constants/profileConstants'\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport Header from '../components/Header';\r\nimport '../styles/ProfileScreen.css';\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n    const [dob, setDob] = useState('')\r\n    const [contactNo, setContactNo] = useState('')\r\n    const [privateEmail, setPrivateEmail] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [dateOfJoining, setDateOfJoining] = useState('')\r\n    const [dateOfLastPromotion, setDateOfLastPromotion] = useState('')\r\n    const [address, setAddress] = useState('')\r\n    const [stateOfOrigin, setStateOfOrigin] = useState('')\r\n    const [lga, setLga] = useState('')\r\n    const [maritalStatus, setMaritalStatus] = useState('')\r\n    const [religion, setReligion] = useState('')\r\n\r\n    //const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const profileDetails = useSelector(state => state.profileDetails)\r\n    const { loading, profile } = profileDetails\r\n\r\n    const profileUpdate = useSelector(state => state.profileUpdate)\r\n    const {  error:errorUpdate, success:successUpdate } = profileUpdate\r\n\r\n    const profileCreate = useSelector(state => state.profileCreate)\r\n    const { error:errorCreate, success:successCreate } = profileCreate\r\n\r\n  \r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo) {\r\n            history.push('/')\r\n        } else {\r\n            if(successUpdate || successCreate) {\r\n                dispatch({\r\n                    type: PROFILE_UPDATE_RESET\r\n                })\r\n                dispatch({\r\n                    type: PROFILE_CREATE_RESET\r\n                })\r\n                dispatch({\r\n                    type: PROFILE_DETAILS_RESET\r\n                })\r\n                history.push('/')\r\n            } else {\r\n            if(!profile || !profile.dob) {\r\n                dispatch(getProfileDetails('me'))\r\n            } else {\r\n                setDob(profile.dob)\r\n                setContactNo(profile.contactNo)\r\n                setPrivateEmail(profile.privateEmail)\r\n                setGender(profile.gender)\r\n                setDateOfJoining(profile.dateOfJoining)\r\n                setDateOfLastPromotion(profile.dateOfLastPromotion)\r\n                setAddress(profile.address)\r\n                setStateOfOrigin(profile.stateOfOrigin)\r\n                setLga(profile.lga)\r\n                setMaritalStatus(profile.maritalStatus)\r\n                setReligion(profile.religion)\r\n\r\n            }\r\n        }\r\n    }\r\n    }, [dispatch, history, profile, successUpdate, successCreate, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProfile({\r\n            _id: profile._id,\r\n            dob,\r\n            contactNo,\r\n            privateEmail,\r\n            gender,\r\n            dateOfJoining,\r\n            dateOfLastPromotion,\r\n            address,\r\n            stateOfOrigin,\r\n            lga,\r\n            maritalStatus,\r\n            religion\r\n        }))\r\n       \r\n       \r\n    }\r\n\r\n\r\n    const createsubmitHandler= (e) => {\r\n        e.preventDefault()\r\n        //Create Actions\r\n        dispatch(createProfile({\r\n          \r\n            dob,\r\n            contactNo,\r\n            privateEmail,\r\n            gender,\r\n            dateOfJoining,\r\n            dateOfLastPromotion,\r\n            address,\r\n            stateOfOrigin,\r\n            lga,\r\n            maritalStatus,\r\n            religion\r\n         }))\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n         \r\n        <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n        <Col md={3}>\r\n            <FixedNavbar />\r\n        </Col>\r\n\r\n        <Col md={8}>\r\n            <Header />\r\n                <h1>My Profile</h1>\r\n               \r\n                {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {successUpdate && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n                {\r\n                    profile ? (\r\n                        <Form onSubmit={submitHandler}>\r\n                        <Form.Row>\r\n                            <Form.Group  as={Col} controlId='dateOfBirth'>\r\n                                <Form.Label>Date Of Birth</Form.Label>\r\n                                <Form.Control \r\n                                type='date' \r\n                            \r\n                                placeholder='Enter Date Of Birth'\r\n                                value={dob.substring(0, 10)}\r\n                                onChange={(e) => setDob(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='contactNo'>\r\n                                <Form.Label>Contact Number</Form.Label>\r\n                                <Form.Control \r\n                                type='contactNo' \r\n                                \r\n                                placeholder='Enter Contact Number'\r\n                                value={contactNo}\r\n                                onChange={(e) => setContactNo(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='privateEmail'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control \r\n                                type='privateEmail' \r\n                                \r\n                                placeholder='Enter Private Email'\r\n                                value={privateEmail}\r\n                                onChange={(e) => setPrivateEmail(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridGender\">\r\n                                <Form.Label>Gender</Form.Label>\r\n                                <Form.Control \r\n                                as=\"select\" \r\n                                size='sm'\r\n                                value={gender}\r\n                                onChange={(e) => setGender(e.target.value)}>\r\n                                    <option value=''>Select...</option>\r\n                                    <option value='MALE'>MALE</option>\r\n                                    <option value='FEMALE'>FEMALE</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='dateOfJoining'>\r\n                                <Form.Label>Date Of Joining</Form.Label>\r\n                                <Form.Control \r\n                                type='date' \r\n                                placeholder='Enter Date Of Joining'\r\n                                value={dateOfJoining}\r\n                                onChange={(e) => setDateOfJoining(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='dateOfLastPromotion'>\r\n                                <Form.Label>Date Of Last Promotion</Form.Label>\r\n                                <Form.Control \r\n                                type='date' \r\n                                placeholder='Enter Date Of Last Promotion'\r\n                                value={dateOfLastPromotion}\r\n                                onChange={(e) => setDateOfLastPromotion(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            \r\n                            <Form.Group  as={Col} controlId='address'>\r\n                                <Form.Label>Address</Form.Label>\r\n                                <Form.Control \r\n                                type='address' \r\n                                placeholder='Enter Address'\r\n                                value={address}\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='stateOfOrigin'>\r\n                                <Form.Label>State Of Origin</Form.Label>\r\n                                <Form.Control \r\n                                type='stateOfOrigin' \r\n                                placeholder='Enter State Of Origin'\r\n                                value={stateOfOrigin}\r\n                                onChange={(e) => setStateOfOrigin(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='lga'>\r\n                                <Form.Label>LGA</Form.Label>\r\n                                <Form.Control \r\n                                type='lga' \r\n                                placeholder='Enter LGA'\r\n                                value={lga}\r\n                                onChange={(e) => setLga(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            \r\n                            <Form.Group  as={Col} controlId='maritalStatus'>\r\n                                <Form.Label>Marital Status</Form.Label>\r\n                                <Form.Control \r\n                                type='maritalStatus' \r\n                                placeholder='Enter Marital Status'\r\n                                value={maritalStatus}\r\n                                onChange={(e) => setMaritalStatus(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='religion'>\r\n                                <Form.Label>Religion</Form.Label>\r\n                                <Form.Control \r\n                                type='religion' \r\n                                placeholder='Enter Religion'\r\n                                value={religion}\r\n                                onChange={(e) => setReligion(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                    \r\n                        <Button type='submit' variant='primary' className='btn-block'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                    ) : (\r\n                        <Form onSubmit={createsubmitHandler}>\r\n                            <Form.Row>\r\n                                <Form.Group  as={Col} controlId='dateOfBirth'>\r\n                                    <Form.Label>Date Of Birth</Form.Label>\r\n                                    <Form.Control \r\n                                    type='date' \r\n                                \r\n                                    placeholder='Enter Date Of Birth'\r\n                                    value={dob}\r\n                                    onChange={(e) => setDob(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  as={Col} controlId='contactNo'>\r\n                                    <Form.Label>Contact Number</Form.Label>\r\n                                    <Form.Control \r\n                                    type='contactNo' \r\n                                    \r\n                                    placeholder='Enter Contact Number'\r\n                                    value={contactNo}\r\n                                    onChange={(e) => setContactNo(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  as={Col} controlId='privateEmail'>\r\n                                    <Form.Label>Email Address</Form.Label>\r\n                                    <Form.Control \r\n                                    type='privateEmail' \r\n                                    \r\n                                    placeholder='Enter Private Email'\r\n                                    value={privateEmail}\r\n                                    onChange={(e) => setPrivateEmail(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                \r\n                        \r\n                                \r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridGender\">\r\n                                    <Form.Label>Gender</Form.Label>\r\n                                    <Form.Control \r\n                                    as=\"select\" \r\n                                    size='sm'\r\n                                    value={gender}\r\n                                    onChange={(e) => setGender(e.target.value)}>\r\n                                        <option value=''>Select...</option>\r\n                                        <option value='MALE'>MALE</option>\r\n                                        <option value='FEMALE'>FEMALE</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  as={Col} controlId='dateOfJoining'>\r\n                                    <Form.Label>Date Of Joining</Form.Label>\r\n                                    <Form.Control \r\n                                    type='date' \r\n                                    placeholder='Enter Date Of Joining'\r\n                                    value={dateOfJoining}\r\n                                    onChange={(e) => setDateOfJoining(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  as={Col} controlId='dateOfLastPromotion'>\r\n                                    <Form.Label>Date Of Last Promotion</Form.Label>\r\n                                    <Form.Control \r\n                                    type='date' \r\n                                    placeholder='Enter Date Of Last Promotion'\r\n                                    value={dateOfLastPromotion}\r\n                                    onChange={(e) => setDateOfLastPromotion(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                            \r\n                        \r\n                                \r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                \r\n                                <Form.Group  as={Col} controlId='address'>\r\n                                    <Form.Label>Address</Form.Label>\r\n                                    <Form.Control \r\n                                    type='address' \r\n                                    placeholder='Enter Address'\r\n                                    value={address}\r\n                                    onChange={(e) => setAddress(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  as={Col} controlId='stateOfOrigin'>\r\n                                    <Form.Label>State Of Origin</Form.Label>\r\n                                    <Form.Control \r\n                                    type='stateOfOrigin' \r\n                                    placeholder='Enter State Of Origin'\r\n                                    value={stateOfOrigin}\r\n                                    onChange={(e) => setStateOfOrigin(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  as={Col} controlId='lga'>\r\n                                    <Form.Label>LGA</Form.Label>\r\n                                    <Form.Control \r\n                                    type='lga' \r\n                                    placeholder='Enter LGA'\r\n                                    value={lga}\r\n                                    onChange={(e) => setLga(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                            \r\n                        \r\n                                \r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                \r\n                                <Form.Group  as={Col} controlId='maritalStatus'>\r\n                                    <Form.Label>Marital Status</Form.Label>\r\n                                    <Form.Control \r\n                                    type='maritalStatus' \r\n                                    placeholder='Enter Marital Status'\r\n                                    value={maritalStatus}\r\n                                    onChange={(e) => setMaritalStatus(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  as={Col} controlId='religion'>\r\n                                    <Form.Label>Religion</Form.Label>\r\n                                    <Form.Control \r\n                                    type='religion' \r\n                                    placeholder='Enter Religion'\r\n                                    value={religion}\r\n                                    onChange={(e) => setReligion(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                            \r\n                        \r\n                                \r\n                            </Form.Row>\r\n                        \r\n                            <Button type='submit' variant='primary' className='btn-block'>\r\n                                Create\r\n                            </Button>\r\n                        </Form>\r\n                    )\r\n                }\r\n                \r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\NextOfKinScreen.js",["190","191"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Form } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createNextOfKin, getNextOfKinDetails, updateNextOfKin } from '../actions/nextOfKinActions'\r\nimport { NOK_CREATE_RESET, NOK_DETAILS_RESET, NOK_UPDATE_RESET } from '../constants/nextOfKinConstants'\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport '../styles/ProfileScreen.css';\r\nimport Header from '../components/Header';\r\n\r\nconst NextOfKinScreen = ({ history }) => {\r\n    const [firstname, setFirstname] = useState('')\r\n    const [lastname, setLastname] = useState('')\r\n    const [contact, setContact] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [relationship, setRelationship] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const nextOfKinDetails = useSelector(state => state.nextOfKinDetails)\r\n    const { loading, nextOfKin } = nextOfKinDetails\r\n\r\n    const nextOfKinUpdate = useSelector(state => state.nextOfKinUpdate)\r\n    const { error:errorUpdate, success:successUpdate } = nextOfKinUpdate\r\n\r\n    const nextOfKinCreate = useSelector(state => state.nextOfKinCreate)\r\n    const { error:errorCreate, success:successCreate } = nextOfKinCreate\r\n\r\n  \r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo) {\r\n            history.push('/')\r\n        } else {\r\n            if(successUpdate || successCreate) {\r\n                dispatch({\r\n                    type: NOK_UPDATE_RESET\r\n                })\r\n                dispatch({\r\n                    type: NOK_DETAILS_RESET\r\n                })\r\n                dispatch({\r\n                    type: NOK_CREATE_RESET\r\n                })\r\n                history.push('/home')\r\n            } else {\r\n            if(!nextOfKin || !nextOfKin.firstname) {\r\n                dispatch(getNextOfKinDetails('me'))\r\n            } else {\r\n                setFirstname(nextOfKin.firstname)\r\n                setLastname(nextOfKin.lastname)\r\n                setContact(nextOfKin.contact)\r\n                setEmail(nextOfKin.email)\r\n                setRelationship(nextOfKin.relationship)\r\n\r\n            }\r\n        }\r\n    }\r\n    }, [dispatch, history, nextOfKin, successUpdate, successCreate, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateNextOfKin({\r\n            _id: nextOfKin._id,\r\n            firstname,\r\n            lastname,\r\n            contact,\r\n            email,\r\n            relationship\r\n        }))\r\n       \r\n       \r\n        \r\n    }\r\n\r\n    const createsubmitHandler= (e) => {\r\n        e.preventDefault()\r\n        dispatch(createNextOfKin({\r\n           \r\n            firstname,\r\n            lastname,\r\n            contact,\r\n            email,\r\n            relationship\r\n        }))\r\n       \r\n       \r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n         \r\n        <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n        <Col md={3}>\r\n        <FixedNavbar />\r\n        </Col>\r\n        <Col md={8}>\r\n            <Header />\r\n                <h1>Next Of Kin</h1>\r\n               \r\n                {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {successUpdate && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n                {\r\n                    nextOfKin ? (\r\n                        <Form onSubmit={submitHandler}>\r\n                        <Form.Row>\r\n                            <Form.Group  as={Col} controlId='firstname'>\r\n                                <Form.Label>Firstname</Form.Label>\r\n                                <Form.Control \r\n                                type='firstname' \r\n                            \r\n                                placeholder='Enter Firstname'\r\n                                value={firstname}\r\n                                onChange={(e) => setFirstname(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='lastname'>\r\n                                <Form.Label>Lastname</Form.Label>\r\n                                <Form.Control \r\n                                type='lastname' \r\n                                \r\n                                placeholder='Enter Lastname'\r\n                                value={lastname}\r\n                                onChange={(e) => setLastname(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control \r\n                                type='email' \r\n                                \r\n                                placeholder='Enter  Email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            \r\n                            <Form.Group  as={Col} controlId='contact'>\r\n                                <Form.Label>Contact Number</Form.Label>\r\n                                <Form.Control \r\n                                type='contact' \r\n                                placeholder='Enter Contact'\r\n                                value={contact}\r\n                                onChange={(e) => setContact(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='relationship'>\r\n                                <Form.Label>Relationship</Form.Label>\r\n                                <Form.Control \r\n                                type='relationship' \r\n                                placeholder='Enter Relationship'\r\n                                value={relationship}\r\n                                onChange={(e) => setRelationship(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        \r\n                    \r\n                        <Button type='submit' variant='primary' className='btn-block'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                    ) : (\r\n                        <Form onSubmit={createsubmitHandler}>\r\n                        <Form.Row>\r\n                            <Form.Group  as={Col} controlId='firstname'>\r\n                                <Form.Label>Firstname</Form.Label>\r\n                                <Form.Control \r\n                                type='firstname' \r\n                            \r\n                                placeholder='Enter Firstname'\r\n                                value={firstname}\r\n                                onChange={(e) => setFirstname(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='lastname'>\r\n                                <Form.Label>Lastname</Form.Label>\r\n                                <Form.Control \r\n                                type='lastname' \r\n                                \r\n                                placeholder='Enter Lastname'\r\n                                value={lastname}\r\n                                onChange={(e) => setLastname(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control \r\n                                type='email' \r\n                                \r\n                                placeholder='Enter  Email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            \r\n                            <Form.Group  as={Col} controlId='contact'>\r\n                                <Form.Label>Contact Number</Form.Label>\r\n                                <Form.Control \r\n                                type='contact' \r\n                                placeholder='Enter Contact'\r\n                                value={contact}\r\n                                onChange={(e) => setContact(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='relationship'>\r\n                                <Form.Label>Relationship</Form.Label>\r\n                                <Form.Control \r\n                                type='relationship' \r\n                                placeholder='Enter Relationship'\r\n                                value={relationship}\r\n                                onChange={(e) => setRelationship(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        \r\n                    \r\n                        <Button type='submit' variant='primary' className='btn-block'>\r\n                            Create\r\n                        </Button>\r\n                    </Form>\r\n                    )\r\n                }\r\n                \r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NextOfKinScreen\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\EducationScreen.js",["192","193"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Form } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { EDUCATION_CREATE_RESET, EDUCATION_DETAILS_RESET, EDUCATION_UPDATE_RESET } from '../constants/educationConstants'\r\nimport { createEducation, getEducationDetails, updateEducation } from '../actions/educationActions';\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport '../styles/EducationScreen.css';\r\nimport Header from '../components/Header';\r\n\r\nconst EducationScreen = ({ history }) => {\r\n    const [institutionAttended, setInstitutionAttended] = useState('')\r\n    const [courseOfStudy, setCourseOfStudy] = useState('')\r\n    const [yearOfGraduation, setYearOfGraduation] = useState('')\r\n    const [professionalMembership, setProfessionalMembership] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const educationDetails = useSelector(state => state.educationDetails)\r\n    const { loading, education } = educationDetails\r\n\r\n    const educationUpdate = useSelector(state => state.educationUpdate)\r\n    const {  error:errorUpdate, success:successUpdate } = educationUpdate\r\n\r\n    const educationCreate = useSelector(state => state.educationCreate)\r\n    const { error:errorCreate, success:successCreate } = educationCreate\r\n    \r\n  \r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo) {\r\n            history.push('/')\r\n        } else {\r\n            if(successUpdate || successCreate) {\r\n                dispatch({\r\n                    type: EDUCATION_UPDATE_RESET\r\n                })\r\n                dispatch({\r\n                    type: EDUCATION_DETAILS_RESET\r\n                })\r\n                dispatch({\r\n                    type: EDUCATION_CREATE_RESET\r\n                })\r\n                history.push('/home')\r\n            } else {\r\n            if(!education || !education.institutionAttended) {\r\n                dispatch(getEducationDetails('me'))\r\n            } else {\r\n                setInstitutionAttended(education.institutionAttended)\r\n                setCourseOfStudy(education.courseOfStudy)\r\n                setProfessionalMembership(education.professionalMembership)\r\n                setYearOfGraduation(education.yearOfGraduation)\r\n            }\r\n        }\r\n    }\r\n    }, [dispatch, history, education, successCreate, successUpdate, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateEducation({\r\n            _id: education._id,\r\n            institutionAttended,\r\n            courseOfStudy,\r\n            professionalMembership,\r\n            yearOfGraduation\r\n        }))\r\n       \r\n    }\r\n\r\n    const createsubmitHandler= (e) => {\r\n        e.preventDefault()\r\n        dispatch(createEducation({\r\n           institutionAttended,\r\n           courseOfStudy,\r\n           professionalMembership,\r\n           yearOfGraduation\r\n        }))\r\n       \r\n    }\r\n\r\n  return (\r\n    <>   \r\n      <Row className='ml-4 mr-4 py-4 educationscreen-wrapper'>\r\n        <Col md={3}>\r\n          <FixedNavbar />\r\n        </Col>\r\n        <Col md={8}>\r\n          <Header />\r\n          <h1 className='page-header'>Education</h1>\r\n          {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n          {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n          {successUpdate && <Message variant='success'>Profile Updated</Message>}\r\n          {loading && <Loader />}\r\n          {\r\n            education ? (\r\n              <Form onSubmit={submitHandler}>\r\n                <Form.Row>\r\n                  <Form.Group  as={Col} controlId='institutionAttended'>\r\n                    <Form.Label>Institution Attended</Form.Label>\r\n                    <Form.Control \r\n                    \ttype='institutionAttended'\r\n                    \tplaceholder='Enter Institution Attended'\r\n                    \tvalue={institutionAttended}\r\n                    \tonChange={(e) => setInstitutionAttended(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group  as={Col} controlId='courseOfStudy'>\r\n                    <Form.Label>Course Of Study</Form.Label>\r\n                    <Form.Control \r\n                      type='courseOfStudy'    \r\n                      placeholder='Enter Course Of Study'\r\n                      value={courseOfStudy}\r\n                      onChange={(e) => setCourseOfStudy(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                  <Form.Group  as={Col} controlId='professionalMembership'>\r\n                    <Form.Label>Professional Membership</Form.Label>\r\n                    <Form.Control \r\n                      type='professionalMembership' \r\n                                \r\n                      placeholder='Enter Professional Membership'\r\n                      value={professionalMembership}\r\n                      onChange={(e) => setProfessionalMembership(e.target.value)}\r\n                    ></Form.Control>\r\n                \t</Form.Group>\r\n                \t<Form.Group  as={Col} controlId='yearOfGraduation'>\r\n                    <Form.Label>Year Of Graduation</Form.Label>\r\n                    <Form.Control \r\n                      type='date' \r\n                            \r\n                      placeholder='Enter Year Of Graduation'\r\n                      value={yearOfGraduation}\r\n                      onChange={(e) => setYearOfGraduation(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                  <Button type='submit' variant='primary' className='btn-block'>\r\n                    Update\r\n                  </Button>\r\n              </Form>\r\n\r\n              ) : (\r\n              <Form onSubmit={createsubmitHandler}>\r\n                <Form.Row>\r\n                  <Form.Group  as={Col} controlId='institutionAttended'>\r\n                    <Form.Label>Institution Attended</Form.Label>\r\n                    <Form.Control \r\n                      type='institutionAttended' \r\n                            \r\n                      placeholder='Enter Institution Attended'\r\n                      value={institutionAttended}\r\n                      onChange={(e) => setInstitutionAttended(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group  as={Col} controlId='courseOfStudy'>\r\n                  \t<Form.Label>Course Of Study</Form.Label>\r\n                    <Form.Control \r\n                      type='courseOfStudy' \r\n                                \r\n                      placeholder='Enter Course Of Study'\r\n                      value={courseOfStudy}\r\n                      onChange={(e) => setCourseOfStudy(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                  <Form.Group  as={Col} controlId='professionalMembership'>\r\n                    <Form.Label>Professional Membership</Form.Label>\r\n                    <Form.Control \r\n                      type='professionalMembership' \r\n                                \r\n                      placeholder='Enter Professional Membership'\r\n                      value={professionalMembership}\r\n                      onChange={(e) => setProfessionalMembership(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group  as={Col} controlId='yearOfGraduation'>\r\n                    <Form.Label>Year Of Graduation</Form.Label>\r\n                    <Form.Control \r\n                      type='date' \r\n                            \r\n                      placeholder='Enter Year Of Graduation'\r\n                      value={yearOfGraduation}\r\n                      onChange={(e) => setYearOfGraduation(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                <Button type='submit' variant='primary' className='btn-block'>\r\n                  Create\r\n                </Button>\r\n              </Form>\r\n              )\r\n            }\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default EducationScreen\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\HrHomeScreen.js",["194","195"],"import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table, Button, Row, Col, ListGroup } from 'react-bootstrap'\r\nimport { getUserDetailsById } from '../actions/userActions';\r\nimport FixedNavbar from '../components/FixedNavbar';\r\n\r\n\r\nconst HrHomeScreen = ({ history, match }) => {\r\n    const userId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    const userDetailsById = useSelector(state => state.userDetailsById)\r\n    const { user } = userDetailsById\r\n\r\n    useEffect(() => {\r\n        if (!userInfo  && (userInfo.role !== 'hr')) {\r\n            \r\n            history.push('/')\r\n        } else {\r\n            dispatch(getUserDetailsById(userId))\r\n        }\r\n        \r\n        \r\n    }, [history, userInfo, userId, dispatch])\r\n\r\n    return (\r\n        <>\r\n            \r\n        <Row className='ml-4 mr-4 py-4'>\r\n        <Col md={3}>\r\n            <FixedNavbar />\r\n        </Col>\r\n        <Col md={8}>\r\n        <Table striped bordered hover reesponsive className='table-sm mr-4 ml-3'>\r\n            <thead>\r\n                <tr>\r\n                    <th>EMPLOYEE ID</th>\r\n                    <th>FIRST NAME</th>\r\n                    <th>MIDDLE NAME</th>\r\n                    <th>LAST NAME</th>\r\n                    <th>EMAIL</th>\r\n                    <th>ROLE</th>\r\n                    <th>DEPARTMENT</th>\r\n                    <th>ACTION</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                \r\n                <tr key={user.employee._id}>\r\n                    <td>{user.employee.employeeCode}</td>\r\n                    <td>{user.employee.firstname}</td>\r\n                    <td>{user.employee.middlename}</td>\r\n                    <td>{user.employee.lastname}</td>\r\n                    <td><a href={`mailto:${user.employee.email}`}>{user.employee.email}</a></td>\r\n                    <td>{user.employee.role}</td>\r\n                    <td>{user.employee.department}</td>\r\n                    {userInfo && (\r\n                    <td>\r\n                        <LinkContainer to={`/dashboard`}>\r\n                            <Button variant='light' className='btn-sm'>\r\n                                <i className='fas fa-edit'></i>\r\n                            </Button>\r\n                        </LinkContainer>\r\n                        \r\n                    </td>\r\n                    )}\r\n                </tr>\r\n                \r\n            </tbody>\r\n        </Table>\r\n        </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HrHomeScreen\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\AdminProfileScreen.js",["196","197","198","199"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Form, Nav} from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createProfileEmpId, getProfileDetailsEmpId, updateProfile } from '../actions/profileActions'\r\nimport { PROFILE_CREATE_EMPLOYEE_RESET, PROFILE_DETAILS_EMPLOYEE_RESET, PROFILE_UPDATE_RESET } from '../constants/profileConstants'\r\nimport '../styles/FixedNavbar.css';\r\nimport Header from '../components/Header';\r\nimport '../styles/ProfileScreen.css';\r\n\r\nconst AdminProfileScreen = ({ history, match }) => {\r\n    const userId = match.params.id\r\n\r\n\r\n    const [dob, setDob] = useState('')\r\n    const [contactNo, setContactNo] = useState('')\r\n    const [privateEmail, setPrivateEmail] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [dateOfJoining, setDateOfJoining] = useState('')\r\n    const [dateOfLastPromotion, setDateOfLastPromotion] = useState('')\r\n    const [address, setAddress] = useState('')\r\n    const [stateOfOrigin, setStateOfOrigin] = useState('')\r\n    const [lga, setLga] = useState('')\r\n    const [maritalStatus, setMaritalStatus] = useState('')\r\n    const [religion, setReligion] = useState('')\r\n\r\n   \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const profileDetailsEmpId = useSelector(state => state.profileDetailsEmpId)\r\n    const { loading, profile } = profileDetailsEmpId\r\n\r\n    const profileUpdate = useSelector(state => state.profileUpdate)\r\n    const { error:errorUpdate, success:successUpdate } = profileUpdate\r\n\r\n    const profileCreateEmpId = useSelector(state => state.profileCreateEmpId)\r\n    const { error:errorCreate, success:successCreate } = profileCreateEmpId\r\n\r\n  \r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo  && (userInfo.role === 'hr' || userInfo.role === 'hr-manager' || userInfo.role === 'admin')) {\r\n            \r\n            if(successUpdate || successCreate) {\r\n                dispatch({\r\n                    type: PROFILE_UPDATE_RESET\r\n                })\r\n                dispatch({\r\n                    type: PROFILE_DETAILS_EMPLOYEE_RESET\r\n                })\r\n                dispatch({\r\n                    type: PROFILE_CREATE_EMPLOYEE_RESET\r\n                })\r\n                history.push('/admin/userlist')\r\n            } else {\r\n            if(!profile || profile.employee !== userId) {\r\n                dispatch(getProfileDetailsEmpId(userId))\r\n            } else {\r\n                setDob(profile.dob)\r\n                setContactNo(profile.contactNo)\r\n                setPrivateEmail(profile.privateEmail)\r\n                setGender(profile.gender)\r\n                setDateOfJoining(profile.dateOfJoining)\r\n                setDateOfLastPromotion(profile.dateOfLastPromotion)\r\n                setAddress(profile.address)\r\n                setStateOfOrigin(profile.stateOfOrigin)\r\n                setLga(profile.lga)\r\n                setMaritalStatus(profile.maritalStatus)\r\n                setReligion(profile.religion)\r\n\r\n            }\r\n        }\r\n        } else {\r\n            history.push('/') \r\n    }\r\n    }, [dispatch, history, profile, userId, successUpdate, successCreate, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProfile({\r\n            _id: profile._id,\r\n            dob,\r\n            contactNo,\r\n            privateEmail,\r\n            gender,\r\n            dateOfJoining,\r\n            dateOfLastPromotion,\r\n            address,\r\n            stateOfOrigin,\r\n            lga,\r\n            maritalStatus,\r\n            religion\r\n        }))\r\n       \r\n       \r\n        \r\n    }\r\n\r\n    const createsubmitHandler= (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProfileEmpId({\r\n            employee: userId,\r\n            dob,\r\n            contactNo,\r\n            privateEmail,\r\n            gender,\r\n            dateOfJoining,\r\n            dateOfLastPromotion,\r\n            address,\r\n            stateOfOrigin,\r\n            lga,\r\n            maritalStatus,\r\n            religion\r\n        }))\r\n       \r\n    }\r\n\r\n    return (\r\n        <>\r\n         \r\n        <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n        <Col md={3}>\r\n\r\n        <div className=\"fixednavbar-wrapper\">\r\n            <div className='employee-details'>\r\n                <p>{userInfo.role}</p>\r\n                <p>{userInfo.email}</p>\r\n            </div>\r\n        <Nav className=\"flex-column\">\r\n        <NavLink to='/admin/userlist' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-home pr-3\"></i>\r\n          All Employees\r\n        </NavLink>\r\n        <NavLink to={`/admin/user/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"far fa-id-card pr-3\"></i>\r\n          Details\r\n        </NavLink>\r\n        <NavLink to={`/admin/profile/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-user-circle pr-3\"></i>\r\n          Profile\r\n        </NavLink>\r\n        <NavLink to={`/admin/education/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-user-friends pr-3\"></i>\r\n          Education\r\n        </NavLink>\r\n        <NavLink to={`/admin/nextofkin/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-graduation-cap pr-3\"></i>\r\n          Employee Next Of Kin\r\n        </NavLink>\r\n        </Nav>\r\n        </div>\r\n\r\n        {/* <ListGroup>\r\n            <ListGroup.Item variant=\"success\">\r\n                <Link to='/admin/userlist'>\r\n                    <strong><i className='fas fa-users'></i> All Employees</strong>\r\n                </Link>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item variant=\"success\">\r\n                <Link to={`/admin/user/${userId}/edit`}>\r\n                    <strong><i className='fas fa-user'></i>  Details</strong>\r\n                </Link>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item variant=\"success\">\r\n                <Link to={`/admin/profile/${userId}/edit`}>\r\n                    <strong><i className='fas fa-user'></i>  Profile</strong>\r\n                </Link>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item variant=\"success\">\r\n                <Link to={`/admin/education/${userId}/edit`}>\r\n                    <strong><i className='fas fa-school'></i>  Education</strong>\r\n                </Link>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item variant=\"success\">\r\n                <Link to={`/admin/nextofkin/${userId}/edit`}>\r\n                    <strong><i className='fas fa-user'></i> Employee Next Of Kin</strong>\r\n                </Link>\r\n            </ListGroup.Item>\r\n            \r\n        </ListGroup> */}\r\n        </Col>\r\n        <Col md={8}>\r\n            <Header />\r\n                <h1 className='page-header'>My Profile</h1>\r\n               \r\n               \r\n                {successUpdate && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n                {\r\n                    profile ? (\r\n                        <Form onSubmit={submitHandler}>\r\n                        <Form.Row>\r\n                            <Form.Group  as={Col} controlId='dateOfBirth'>\r\n                                <Form.Label>Date Of Birth</Form.Label>\r\n                                <Form.Control \r\n                                type='date' \r\n                            \r\n                                placeholder='Enter Date Of Birth'\r\n                                value={dob}\r\n                                onChange={(e) => setDob(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='contactNo'>\r\n                                <Form.Label>Contact Number</Form.Label>\r\n                                <Form.Control \r\n                                type='contactNo' \r\n                                \r\n                                placeholder='Enter Contact Number'\r\n                                value={contactNo}\r\n                                onChange={(e) => setContactNo(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='privateEmail'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control \r\n                                type='privateEmail' \r\n                                \r\n                                placeholder='Enter Private Email'\r\n                                value={privateEmail}\r\n                                onChange={(e) => setPrivateEmail(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridGender\">\r\n                                <Form.Label>Gender</Form.Label>\r\n                                <Form.Control \r\n                                as=\"select\" \r\n                                size='sm'\r\n                                value={gender}\r\n                                onChange={(e) => setGender(e.target.value)}>\r\n                                    <option value=''>Select...</option>\r\n                                    <option value='MALE'>MALE</option>\r\n                                    <option value='FEMALE'>FEMALE</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='dateOfJoining'>\r\n                                <Form.Label>Date Of Joining</Form.Label>\r\n                                <Form.Control \r\n                                type='date' \r\n                                placeholder='Enter Date Of Joining'\r\n                                value={dateOfJoining}\r\n                                onChange={(e) => setDateOfJoining(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='dateOfLastPromotion'>\r\n                                <Form.Label>Date Of Last Promotion</Form.Label>\r\n                                <Form.Control \r\n                                type='date' \r\n                                placeholder='Enter Date Of Last Promotion'\r\n                                value={dateOfLastPromotion}\r\n                                onChange={(e) => setDateOfLastPromotion(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            \r\n                            <Form.Group  as={Col} controlId='address'>\r\n                                <Form.Label>Address</Form.Label>\r\n                                <Form.Control \r\n                                type='address' \r\n                                placeholder='Enter Address'\r\n                                value={address}\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='stateOfOrigin'>\r\n                                <Form.Label>State Of Origin</Form.Label>\r\n                                <Form.Control \r\n                                type='stateOfOrigin' \r\n                                placeholder='Enter State Of Origin'\r\n                                value={stateOfOrigin}\r\n                                onChange={(e) => setStateOfOrigin(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='lga'>\r\n                                <Form.Label>LGA</Form.Label>\r\n                                <Form.Control \r\n                                type='lga' \r\n                                placeholder='Enter LGA'\r\n                                value={lga}\r\n                                onChange={(e) => setLga(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            \r\n                            <Form.Group  as={Col} controlId='maritalStatus'>\r\n                                <Form.Label>Marital Status</Form.Label>\r\n                                <Form.Control \r\n                                type='maritalStatus' \r\n                                placeholder='Enter Marital Status'\r\n                                value={maritalStatus}\r\n                                onChange={(e) => setMaritalStatus(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='religion'>\r\n                                <Form.Label>Religion</Form.Label>\r\n                                <Form.Control \r\n                                type='religion' \r\n                                placeholder='Enter Religion'\r\n                                value={religion}\r\n                                onChange={(e) => setReligion(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                    \r\n                        <Button type='submit' variant='primary' className='btn-block'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                    ) : (\r\n                        <Form onSubmit={createsubmitHandler}>\r\n                            <Form.Row>\r\n                                <Form.Group  as={Col} controlId='dateOfBirth'>\r\n                                    <Form.Label>Date Of Birth</Form.Label>\r\n                                    <Form.Control \r\n                                    type='date' \r\n                                \r\n                                    placeholder='Enter Date Of Birth'\r\n                                    value={dob}\r\n                                    onChange={(e) => setDob(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  as={Col} controlId='contactNo'>\r\n                                    <Form.Label>Contact Number</Form.Label>\r\n                                    <Form.Control \r\n                                    type='contactNo' \r\n                                    \r\n                                    placeholder='Enter Contact Number'\r\n                                    value={contactNo}\r\n                                    onChange={(e) => setContactNo(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  as={Col} controlId='privateEmail'>\r\n                                    <Form.Label>Email Address</Form.Label>\r\n                                    <Form.Control \r\n                                    type='privateEmail' \r\n                                    \r\n                                    placeholder='Enter Private Email'\r\n                                    value={privateEmail}\r\n                                    onChange={(e) => setPrivateEmail(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                \r\n                        \r\n                                \r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridGender\">\r\n                                    <Form.Label>Gender</Form.Label>\r\n                                    <Form.Control \r\n                                    as=\"select\" \r\n                                    size='sm'\r\n                                    value={gender}\r\n                                    onChange={(e) => setGender(e.target.value)}>\r\n                                        <option value=''>Select...</option>\r\n                                        <option value='MALE'>MALE</option>\r\n                                        <option value='FEMALE'>FEMALE</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  as={Col} controlId='dateOfJoining'>\r\n                                    <Form.Label>Date Of Joining</Form.Label>\r\n                                    <Form.Control \r\n                                    type='date' \r\n                                    placeholder='Enter Date Of Joining'\r\n                                    value={dateOfJoining}\r\n                                    onChange={(e) => setDateOfJoining(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  as={Col} controlId='dateOfLastPromotion'>\r\n                                    <Form.Label>Date Of Last Promotion</Form.Label>\r\n                                    <Form.Control \r\n                                    type='date' \r\n                                    placeholder='Enter Date Of Last Promotion'\r\n                                    value={dateOfLastPromotion}\r\n                                    onChange={(e) => setDateOfLastPromotion(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                            \r\n                        \r\n                                \r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                \r\n                                <Form.Group  as={Col} controlId='address'>\r\n                                    <Form.Label>Address</Form.Label>\r\n                                    <Form.Control \r\n                                    type='address' \r\n                                    placeholder='Enter Address'\r\n                                    value={address}\r\n                                    onChange={(e) => setAddress(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  as={Col} controlId='stateOfOrigin'>\r\n                                    <Form.Label>State Of Origin</Form.Label>\r\n                                    <Form.Control \r\n                                    type='stateOfOrigin' \r\n                                    placeholder='Enter State Of Origin'\r\n                                    value={stateOfOrigin}\r\n                                    onChange={(e) => setStateOfOrigin(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  as={Col} controlId='lga'>\r\n                                    <Form.Label>LGA</Form.Label>\r\n                                    <Form.Control \r\n                                    type='lga' \r\n                                    placeholder='Enter LGA'\r\n                                    value={lga}\r\n                                    onChange={(e) => setLga(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                            \r\n                        \r\n                                \r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                \r\n                                <Form.Group  as={Col} controlId='maritalStatus'>\r\n                                    <Form.Label>Marital Status</Form.Label>\r\n                                    <Form.Control \r\n                                    type='maritalStatus' \r\n                                    placeholder='Enter Marital Status'\r\n                                    value={maritalStatus}\r\n                                    onChange={(e) => setMaritalStatus(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group  as={Col} controlId='religion'>\r\n                                    <Form.Label>Religion</Form.Label>\r\n                                    <Form.Control \r\n                                    type='religion' \r\n                                    placeholder='Enter Religion'\r\n                                    value={religion}\r\n                                    onChange={(e) => setReligion(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                            \r\n                        \r\n                                \r\n                            </Form.Row>\r\n                        \r\n                            <Button type='submit' variant='primary' className='btn-block'>\r\n                                Create\r\n                            </Button>\r\n                        </Form>\r\n                    )\r\n                }\r\n                \r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminProfileScreen\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\AdminNextOfKinScreen.js",["200","201","202","203"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { Button, Row, Col, Nav, Form } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createNextOfKin, createNextOfKinEmpId, getNextOfKinDetailsEmpId, updateNextOfKin } from '../actions/nextOfKinActions'\r\nimport { NOK_CREATE_EMPLOYEE_RESET, NOK_DETAILS_EMPLOYEE_RESET, NOK_UPDATE_RESET } from '../constants/nextOfKinConstants'\r\nimport '../styles/FixedNavbar.css';\r\nimport Header from '../components/Header';\r\nimport '../styles/ProfileScreen.css';\r\n\r\nconst AdminNextOfKinScreen = ({ history, match }) => {\r\n    const userId = match.params.id\r\n    \r\n    const [firstname, setFirstname] = useState('')\r\n    const [lastname, setLastname] = useState('')\r\n    const [contact, setContact] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [relationship, setRelationship] = useState('')\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const nextOfKinDetailsEmpId = useSelector(state => state.nextOfKinDetailsEmpId)\r\n    const { loading, nextOfKin } = nextOfKinDetailsEmpId\r\n\r\n    const nextOfKinUpdate = useSelector(state => state.nextOfKinUpdate)\r\n    const { error:errorUpdate, success:successUpdate } = nextOfKinUpdate\r\n\r\n    const nextOfKinCreateEmpId = useSelector(state => state.nextOfKinCreateEmpId)\r\n    const { error:errorCreate, success:successCreate } = nextOfKinCreateEmpId\r\n\r\n  \r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo  && (userInfo.role === 'hr' || userInfo.role === 'hr-manager' || userInfo.role === 'admin')) {\r\n            \r\n            if(successUpdate || successCreate) {\r\n                dispatch({\r\n                    type: NOK_UPDATE_RESET\r\n                })\r\n                dispatch({\r\n                    type: NOK_DETAILS_EMPLOYEE_RESET\r\n                })\r\n                dispatch({\r\n                    type: NOK_CREATE_EMPLOYEE_RESET\r\n                })\r\n                history.push('/home')\r\n            } else {\r\n            if(!nextOfKin || nextOfKin.employee  !== userId ) {\r\n                dispatch(getNextOfKinDetailsEmpId(userId))\r\n            } else {\r\n                setFirstname(nextOfKin.firstname)\r\n                setLastname(nextOfKin.lastname)\r\n                setContact(nextOfKin.contact)\r\n                setEmail(nextOfKin.email)\r\n                setRelationship(nextOfKin.relationship)\r\n\r\n            }\r\n        }\r\n        } else {\r\n            history.push('/')\r\n    }\r\n    }, [dispatch, history, nextOfKin, successUpdate, userId, successCreate, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateNextOfKin({\r\n            _id: nextOfKin._id,\r\n            firstname,\r\n            lastname,\r\n            contact,\r\n            email,\r\n            relationship\r\n        }))\r\n       \r\n       \r\n        \r\n    }\r\n\r\n    const createsubmitHandler= (e) => {\r\n        e.preventDefault()\r\n        dispatch(createNextOfKinEmpId({\r\n            employee: userId,\r\n            firstname,\r\n            lastname,\r\n            contact,\r\n            email,\r\n            relationship\r\n        }))\r\n       \r\n       \r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n         \r\n        <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n        <Col md={3}>\r\n        <div className=\"fixednavbar-wrapper\">\r\n            <div className='employee-details'>\r\n                <p>{userInfo.role}</p>\r\n                <p>{userInfo.email}</p>\r\n            </div>\r\n        <Nav className=\"flex-column\">\r\n        <NavLink to='/admin/userlist' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-home pr-3\"></i>\r\n          All Employees\r\n        </NavLink>\r\n        <NavLink to={`/admin/user/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"far fa-id-card pr-3\"></i>\r\n          Details\r\n        </NavLink>\r\n        <NavLink to={`/admin/profile/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-user-circle pr-3\"></i>\r\n          Profile\r\n        </NavLink>\r\n        <NavLink to={`/admin/education/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-user-friends pr-3\"></i>\r\n          Education\r\n        </NavLink>\r\n        <NavLink to={`/admin/nextofkin/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-graduation-cap pr-3\"></i>\r\n          Employee Next Of Kin\r\n        </NavLink>\r\n        </Nav>\r\n        </div>\r\n        </Col>\r\n        <Col md={8}>\r\n            <Header />\r\n                <h1 className='page-header'>Next Of Kin</h1>\r\n               \r\n                \r\n                {successUpdate && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n                {\r\n                    nextOfKin ? (\r\n                        <Form onSubmit={submitHandler}>\r\n                        <Form.Row>\r\n                            <Form.Group  as={Col} controlId='firstname'>\r\n                                <Form.Label>Firstname</Form.Label>\r\n                                <Form.Control \r\n                                type='firstname' \r\n                            \r\n                                placeholder='Enter Firstname'\r\n                                value={firstname}\r\n                                onChange={(e) => setFirstname(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='lastname'>\r\n                                <Form.Label>Lastname</Form.Label>\r\n                                <Form.Control \r\n                                type='lastname' \r\n                                \r\n                                placeholder='Enter Lastname'\r\n                                value={lastname}\r\n                                onChange={(e) => setLastname(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control \r\n                                type='email' \r\n                                \r\n                                placeholder='Enter  Email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            \r\n                            <Form.Group  as={Col} controlId='contact'>\r\n                                <Form.Label>Contact Number</Form.Label>\r\n                                <Form.Control \r\n                                type='contact' \r\n                                placeholder='Enter Contact'\r\n                                value={contact}\r\n                                onChange={(e) => setContact(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='relationship'>\r\n                                <Form.Label>Relationship</Form.Label>\r\n                                <Form.Control \r\n                                type='relationship' \r\n                                placeholder='Enter Relationship'\r\n                                value={relationship}\r\n                                onChange={(e) => setRelationship(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        \r\n                    \r\n                        <Button type='submit' variant='primary' className='btn-block'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                    ) : (\r\n                        <Form onSubmit={createsubmitHandler}>\r\n                        <Form.Row>\r\n                            <Form.Group  as={Col} controlId='firstname'>\r\n                                <Form.Label>Firstname</Form.Label>\r\n                                <Form.Control \r\n                                type='firstname' \r\n                            \r\n                                placeholder='Enter Firstname'\r\n                                value={firstname}\r\n                                onChange={(e) => setFirstname(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='lastname'>\r\n                                <Form.Label>Lastname</Form.Label>\r\n                                <Form.Control \r\n                                type='lastname' \r\n                                \r\n                                placeholder='Enter Lastname'\r\n                                value={lastname}\r\n                                onChange={(e) => setLastname(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control \r\n                                type='email' \r\n                                \r\n                                placeholder='Enter  Email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            \r\n                            <Form.Group  as={Col} controlId='contact'>\r\n                                <Form.Label>Contact Number</Form.Label>\r\n                                <Form.Control \r\n                                type='contact' \r\n                                placeholder='Enter Contact'\r\n                                value={contact}\r\n                                onChange={(e) => setContact(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='relationship'>\r\n                                <Form.Label>Relationship</Form.Label>\r\n                                <Form.Control \r\n                                type='relationship' \r\n                                placeholder='Enter Relationship'\r\n                                value={relationship}\r\n                                onChange={(e) => setRelationship(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        \r\n                    \r\n                        <Button type='submit' variant='primary' className='btn-block'>\r\n                            Create\r\n                        </Button>\r\n                    </Form>\r\n                    )\r\n                }\r\n                \r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminNextOfKinScreen\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\AdminEducationScreen.js",["204","205","206","207","208","209","210"],"import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Table, Button, Row, Col, Nav, Form } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { EDUCATION_CREATE_EMPLOYEE_RESET, EDUCATION_CREATE_RESET, EDUCATION_DETAILS_EMPLOYEE_RESET, EDUCATION_UPDATE_RESET } from '../constants/educationConstants'\r\nimport { createEducation, createEducationEmpId, getEducationDetailsEmpId, updateEducation } from '../actions/educationActions'\r\nimport '../styles/FixedNavbar.css';\r\nimport Header from '../components/Header';\r\nimport '../styles/ProfileScreen.css';\r\n\r\nconst AdminEducationScreen = ({ history, match }) => {\r\n    const userId = match.params.id\r\n\r\n    const [institutionAttended, setInstitutionAttended] = useState('')\r\n    const [courseOfStudy, setCourseOfStudy] = useState('')\r\n    const [yearOfGraduation, setYearOfGraduation] = useState('')\r\n    const [professionalMembership, setProfessionalMembership] = useState('')\r\n\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const educationDetailsEmpId = useSelector(state => state.educationDetailsEmpId)\r\n    const { loading, error, education } = educationDetailsEmpId\r\n\r\n    const educationUpdate = useSelector(state => state.educationUpdate)\r\n    const { success:successUpdate } = educationUpdate\r\n\r\n    const educationCreateEmpId = useSelector(state => state.educationCreateEmpId)\r\n    const { success:successCreate } = educationCreateEmpId\r\n    \r\n  \r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo  && (userInfo.role === 'hr' || userInfo.role === 'hr-manager' || userInfo.role === 'admin')) {\r\n            \r\n            if(successUpdate || successCreate) {\r\n                dispatch({\r\n                    type: EDUCATION_UPDATE_RESET\r\n                })\r\n                dispatch({\r\n                    type: EDUCATION_DETAILS_EMPLOYEE_RESET\r\n                })\r\n                dispatch({\r\n                    type: EDUCATION_CREATE_EMPLOYEE_RESET\r\n                })\r\n                history.push('/home')\r\n            } else {\r\n            if(!education || education.employee  !== userId) {\r\n                dispatch(getEducationDetailsEmpId(userId))\r\n            } else {\r\n                setInstitutionAttended(education.institutionAttended)\r\n                setCourseOfStudy(education.courseOfStudy)\r\n                setProfessionalMembership(education.professionalMembership)\r\n                setYearOfGraduation(education.yearOfGraduation)\r\n            }\r\n        }\r\n        } else {\r\n            history.push('/')\r\n    }\r\n    }, [dispatch, history, education, userId, successCreate, successUpdate, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateEducation({\r\n            _id: education._id,\r\n            institutionAttended,\r\n            courseOfStudy,\r\n            professionalMembership,\r\n            yearOfGraduation\r\n        }))\r\n       \r\n    }\r\n\r\n    const createsubmitHandler= (e) => {\r\n        e.preventDefault()\r\n        dispatch(createEducationEmpId({\r\n            employee: userId,\r\n           institutionAttended,\r\n           courseOfStudy,\r\n           professionalMembership,\r\n           yearOfGraduation\r\n        }))\r\n       \r\n    }\r\n\r\n    return (\r\n        <>\r\n         \r\n        <Row className='ml-4 mr-4 py-4 profilescreen-wrapper'>\r\n        <Col md={3}>\r\n        <div className=\"fixednavbar-wrapper\">\r\n            <div className='employee-details'>\r\n                <p>{userInfo.role}</p>\r\n                <p>{userInfo.email}</p>\r\n            </div>\r\n        <Nav className=\"flex-column\">\r\n        <NavLink to='/admin/userlist' exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-home pr-3\"></i>\r\n          All Employees\r\n        </NavLink>\r\n        <NavLink to={`/admin/user/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"far fa-id-card pr-3\"></i>\r\n          Details\r\n        </NavLink>\r\n        <NavLink to={`/admin/profile/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-user-circle pr-3\"></i>\r\n          Profile\r\n        </NavLink>\r\n        <NavLink to={`/admin/education/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-user-friends pr-3\"></i>\r\n          Education\r\n        </NavLink>\r\n        <NavLink to={`/admin/nextofkin/${userId}/edit`} exact className=\"nav-link\" activeClassName='active-here'>\r\n          <i class=\"fas fa-graduation-cap pr-3\"></i>\r\n          Employee Next Of Kin\r\n        </NavLink>\r\n        </Nav>\r\n        </div>\r\n        </Col>\r\n        <Col md={8}>\r\n            <Header />\r\n                <h1 className='page-header'>Education</h1>\r\n               \r\n               \r\n                {successUpdate && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n                {\r\n                    education ? (\r\n                        <Form onSubmit={submitHandler}>\r\n                        <Form.Row>\r\n                            <Form.Group  as={Col} controlId='institutionAttended'>\r\n                                <Form.Label>Institution Attended</Form.Label>\r\n                                <Form.Control \r\n                                type='institutionAttended' \r\n                            \r\n                                placeholder='Enter Institution Attended'\r\n                                value={institutionAttended}\r\n                                onChange={(e) => setInstitutionAttended(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='courseOfStudy'>\r\n                                <Form.Label>Course Of Study</Form.Label>\r\n                                <Form.Control \r\n                                type='courseOfStudy' \r\n                                \r\n                                placeholder='Enter Course Of Study'\r\n                                value={courseOfStudy}\r\n                                onChange={(e) => setCourseOfStudy(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            \r\n                            \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group  as={Col} controlId='professionalMembership'>\r\n                                <Form.Label>Professional Membership</Form.Label>\r\n                                <Form.Control \r\n                                type='professionalMembership' \r\n                                \r\n                                placeholder='Enter Professional Membership'\r\n                                value={professionalMembership}\r\n                                onChange={(e) => setProfessionalMembership(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='yearOfGraduation'>\r\n                                <Form.Label>Year Of Graduation</Form.Label>\r\n                                <Form.Control \r\n                                type='date' \r\n                            \r\n                                placeholder='Enter Year Of Graduation'\r\n                                value={yearOfGraduation}\r\n                                onChange={(e) => setYearOfGraduation(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        \r\n                    \r\n                        <Button type='submit' variant='primary' className='btn-block'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                    ) : (\r\n                        <Form onSubmit={createsubmitHandler}>\r\n                        <Form.Row>\r\n                            <Form.Group  as={Col} controlId='institutionAttended'>\r\n                                <Form.Label>Institution Attended</Form.Label>\r\n                                <Form.Control \r\n                                type='institutionAttended' \r\n                            \r\n                                placeholder='Enter Institution ATtended'\r\n                                value={institutionAttended}\r\n                                onChange={(e) => setInstitutionAttended(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='courseOfStudy'>\r\n                                <Form.Label>Course Of Study</Form.Label>\r\n                                <Form.Control \r\n                                type='courseOfStudy' \r\n                                \r\n                                placeholder='Enter Course Of Study'\r\n                                value={courseOfStudy}\r\n                                onChange={(e) => setCourseOfStudy(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            \r\n                            \r\n                    \r\n                            \r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group  as={Col} controlId='professionalMembership'>\r\n                                <Form.Label>Professional Membership</Form.Label>\r\n                                <Form.Control \r\n                                type='professionalMembership' \r\n                                \r\n                                placeholder='Enter Professional Membership'\r\n                                value={professionalMembership}\r\n                                onChange={(e) => setProfessionalMembership(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group  as={Col} controlId='yearOfGraduation'>\r\n                                <Form.Label>Year Of Graduation</Form.Label>\r\n                                <Form.Control \r\n                                type='date' \r\n                            \r\n                                placeholder='Enter Year Of Graduation'\r\n                                value={yearOfGraduation}\r\n                                onChange={(e) => setYearOfGraduation(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        \r\n                        \r\n                    \r\n                        <Button type='submit' variant='primary' className='btn-block'>\r\n                            Create\r\n                        </Button>\r\n                    </Form>\r\n                    )\r\n                }\r\n                \r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminEducationScreen\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\screens\\MyLeaveApplicationScreen.js",["211","212","213","214","215","216"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Form } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FixedNavbar from '../components/FixedNavbar';\r\nimport Header from '../components/Header';\r\n\r\nconst MyLeaveApplicationScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo) {\r\n            history.push('/')\r\n        } \r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <>\r\n            \r\n        <Row className='ml-4 mr-4 py-4'>\r\n        <Col md={3}>\r\n        <FixedNavbar />\r\n        </Col>\r\n        <Col md={8}>\r\n            <Header />\r\n            <h1 className='page-header'>Page Still in Development</h1>\r\n        </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyLeaveApplicationScreen;\r\n","C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\components\\Header.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\reducers\\userReducers.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\reducers\\profileReducers.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\reducers\\nextOfKinReducer.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\reducers\\educationReducers.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\components\\Message.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\components\\Loader.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\components\\FixedNavbar.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\components\\Paginate.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\components\\SearchBox.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\actions\\userActions.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\actions\\profileActions.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\actions\\nextOfKinActions.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\actions\\educationActions.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\constants\\userConstants.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\constants\\profileConstants.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\constants\\nextOfKinConstants.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\constants\\educationConstants.js",[],"C:\\Users\\john.adibe\\Desktop\\WEB-DEV\\human-resource-mgt-web\\src\\shared\\baseUrl.js",[],{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":49,"column":15,"nodeType":"223","endLine":49,"endColumn":36},{"ruleId":"221","severity":1,"message":"222","line":54,"column":15,"nodeType":"223","endLine":54,"endColumn":32},{"ruleId":"224","severity":1,"message":"225","line":2,"column":34,"nodeType":"226","messageId":"227","endLine":2,"endColumn":43},{"ruleId":"224","severity":1,"message":"228","line":3,"column":10,"nodeType":"226","messageId":"227","endLine":3,"endColumn":14},{"ruleId":"224","severity":1,"message":"225","line":2,"column":34,"nodeType":"226","messageId":"227","endLine":2,"endColumn":43},{"ruleId":"224","severity":1,"message":"228","line":3,"column":10,"nodeType":"226","messageId":"227","endLine":3,"endColumn":14},{"ruleId":"224","severity":1,"message":"228","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":14},{"ruleId":"224","severity":1,"message":"225","line":3,"column":34,"nodeType":"226","messageId":"227","endLine":3,"endColumn":43},{"ruleId":"224","severity":1,"message":"228","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":14},{"ruleId":"224","severity":1,"message":"229","line":3,"column":10,"nodeType":"226","messageId":"227","endLine":3,"endColumn":15},{"ruleId":"224","severity":1,"message":"228","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":14},{"ruleId":"224","severity":1,"message":"225","line":3,"column":34,"nodeType":"226","messageId":"227","endLine":3,"endColumn":43},{"ruleId":"224","severity":1,"message":"230","line":22,"column":21,"nodeType":"226","messageId":"227","endLine":22,"endColumn":31},{"ruleId":"224","severity":1,"message":"228","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":14},{"ruleId":"224","severity":1,"message":"225","line":3,"column":28,"nodeType":"226","messageId":"227","endLine":3,"endColumn":37},{"ruleId":"224","severity":1,"message":"228","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":14},{"ruleId":"224","severity":1,"message":"225","line":3,"column":28,"nodeType":"226","messageId":"227","endLine":3,"endColumn":37},{"ruleId":"224","severity":1,"message":"228","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":14},{"ruleId":"224","severity":1,"message":"225","line":3,"column":28,"nodeType":"226","messageId":"227","endLine":3,"endColumn":37},{"ruleId":"224","severity":1,"message":"228","line":3,"column":10,"nodeType":"226","messageId":"227","endLine":3,"endColumn":14},{"ruleId":"224","severity":1,"message":"225","line":5,"column":35,"nodeType":"226","messageId":"227","endLine":5,"endColumn":44},{"ruleId":"224","severity":1,"message":"228","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":14},{"ruleId":"224","severity":1,"message":"225","line":3,"column":28,"nodeType":"226","messageId":"227","endLine":3,"endColumn":37},{"ruleId":"224","severity":1,"message":"231","line":40,"column":19,"nodeType":"226","messageId":"227","endLine":40,"endColumn":30},{"ruleId":"224","severity":1,"message":"232","line":43,"column":19,"nodeType":"226","messageId":"227","endLine":43,"endColumn":30},{"ruleId":"224","severity":1,"message":"228","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":14},{"ruleId":"224","severity":1,"message":"233","line":7,"column":10,"nodeType":"226","messageId":"227","endLine":7,"endColumn":25},{"ruleId":"224","severity":1,"message":"231","line":32,"column":19,"nodeType":"226","messageId":"227","endLine":32,"endColumn":30},{"ruleId":"224","severity":1,"message":"232","line":35,"column":19,"nodeType":"226","messageId":"227","endLine":35,"endColumn":30},{"ruleId":"224","severity":1,"message":"234","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":23},{"ruleId":"224","severity":1,"message":"229","line":4,"column":10,"nodeType":"226","messageId":"227","endLine":4,"endColumn":15},{"ruleId":"224","severity":1,"message":"235","line":8,"column":43,"nodeType":"226","messageId":"227","endLine":8,"endColumn":65},{"ruleId":"224","severity":1,"message":"236","line":9,"column":10,"nodeType":"226","messageId":"227","endLine":9,"endColumn":25},{"ruleId":"224","severity":1,"message":"237","line":22,"column":12,"nodeType":"226","messageId":"227","endLine":22,"endColumn":19},{"ruleId":"224","severity":1,"message":"230","line":22,"column":21,"nodeType":"226","messageId":"227","endLine":22,"endColumn":31},{"ruleId":"224","severity":1,"message":"238","line":30,"column":22,"nodeType":"226","messageId":"227","endLine":30,"endColumn":27},{"ruleId":"224","severity":1,"message":"239","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":25},{"ruleId":"224","severity":1,"message":"240","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":16},{"ruleId":"224","severity":1,"message":"225","line":2,"column":28,"nodeType":"226","messageId":"227","endLine":2,"endColumn":37},{"ruleId":"224","severity":1,"message":"241","line":2,"column":39,"nodeType":"226","messageId":"227","endLine":2,"endColumn":43},{"ruleId":"224","severity":1,"message":"242","line":3,"column":8,"nodeType":"226","messageId":"227","endLine":3,"endColumn":15},{"ruleId":"224","severity":1,"message":"243","line":4,"column":8,"nodeType":"226","messageId":"227","endLine":4,"endColumn":14},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'ListGroup' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Table' is defined but never used.","'setMessage' is assigned a value but never used.","'errorUpdate' is assigned a value but never used.","'errorCreate' is assigned a value but never used.","'createNextOfKin' is defined but never used.","'LinkContainer' is defined but never used.","'EDUCATION_CREATE_RESET' is defined but never used.","'createEducation' is defined but never used.","'message' is assigned a value but never used.","'error' is assigned a value but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","no-global-assign","no-unsafe-negation"]